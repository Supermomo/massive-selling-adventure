package com.nuit.info.resources;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;

import org.datanucleus.util.Log4JLogger;

import com.google.appengine.labs.repackaged.org.json.JSONException;
import com.google.appengine.labs.repackaged.org.json.JSONObject;
import com.nuit.info.models.User;
import com.nuit.info.utils.DatabaseMockUp;

@Path("/chat")
public class ChatResource {
	
	private DatabaseMockUp database = DatabaseMockUp.getInstance();

	@POST
	@Produces("application/json")
	@Consumes("application/json")
	public String post(String s) {
		String username = null;
		String message = null;
		try {
			JSONObject object = new JSONObject(s);
			username = object.getString("username");
			message = object.getString("message");
		} catch (JSONException e) {
			e.printStackTrace();
		}
		
	}
	
	@POST
	@Path("/logout/")
	@Produces("application/json")
	@Consumes("application/json")
	public void logout(String s) {
		String username = null;
		try {
			JSONObject object = new JSONObject(s);
			username = object.getString("username");
		} catch (JSONException e) {
			e.printStackTrace();
		}
		database.getConnectedUsers().remove(username);
	}
	
	@POST
	@Path("/register/")
	@Produces("application/json")
	@Consumes("application/json")
	public String register(String s) {
		String username = null;
		String password = null;
		String mail = null;
		int image = 0;
		
		try {
			JSONObject object = new JSONObject(s);
			username = object.getString("username");
			password = object.getString("password");
			mail = object.getString("mail");
			image = object.getInt("character");
		} catch (JSONException e) {
			e.printStackTrace();
		}
		
		User user = new User();
		user.setUsername(username);
		user.setPassword(password);
		user.setMail(mail);
		user.setImage(image);
		if(database.getUserList().containsKey(username)) {
			return "{\"return\":false}";
		}
		database.getUserList().put(username, user);
		return "{\"return\":true}";
	}
}
